import os
import asyncio
from telethon import TelegramClient, events, errors
import getpass

api_id = '21396794'
api_hash = '5b9ac3a8dd838c62111e033dd481dcc6'

def get_existing_sessions():
    sessions = []
    for filename in os.listdir():
        if filename.endswith('.session'):
            sessions.append(filename[:-8])  # —É–¥–∞–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ ".session"te
    return sessions

async def authorize_client(client, phone_number=None):
    await client.connect()
    if not await client.is_user_authorized():
        if phone_number:
            await client.send_code_request(phone_number)
            code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS: ")
            try:
                await client.sign_in(phone_number, code)
            except errors.SessionPasswordNeededError:
                password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
                await client.sign_in(password=password)
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω.")
    return client

async def main():
    sessions = get_existing_sessions()
    if sessions:
        print("–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—Ö–æ–¥–∞:")
        for i, session in enumerate(sessions):
            print(f"{i + 1}. {session}")
        print(f"{len(sessions) + 1}. –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç")
        choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±–æ—Ä–∞: "))
        if choice == len(sessions) + 1:
            phone_number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
            client = TelegramClient(phone_number, api_id, api_hash)
            await authorize_client(client, phone_number)
        else:
            session_name = sessions[choice - 1]
            client = TelegramClient(session_name, api_id, api_hash)
            await authorize_client(client)
    else:
        phone_number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: ")
        client = TelegramClient(phone_number, api_id, api_hash)
        await authorize_client(client, phone_number)
    
    if await client.is_user_authorized():
        print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        return

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ (outgoing=True)
    @client.on(events.NewMessage(outgoing=True))
    # @client.on(events.NewMessage)

    async def handler(event):
        text = event.message.text or ""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª—é–±—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if ".sm" in text.lower():
            await event.message.edit("–°–∞–ª–∞–º–∞–ª–µ–∫—É–º")
        if ".d" in text.lower():
            await event.message.edit("–ò–¥–∏ –Ω–∞—Ö—É–π —Ç–≤–∞—Ä—å!üíã")
        if ".wu" in text.lower():
            await event.message.edit("Hey! What's up bro?")

    # –ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ —Ä—É—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Ctrl+C)
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())

import os
import asyncio
from telethon import TelegramClient, events, errors
from telethon.tl.functions.contacts import GetContactsRequest
import getpass

api_id = '21396794'
api_hash = '5b9ac3a8dd838c62111e033dd481dcc6'

# –°–ª–æ–≤–∞—Ä—å –ø–µ—Å–µ–Ω
COMMANDS = {
    "–±–æ—Ç, —Ç—ã —Ç—É—Ç?": "–î–∞! –°–ª—É—à–∞—é –≤–∞—Å",
    "–ø—Ä–∏–≤–µ—Ç, –±–æ—Ç": "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üëã",
    "–±–æ—Ç, –ø—Ä–∏–≤–µ—Ç": "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üëã",
    "—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É": "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ü–æ—Ç–æ–º—É —á—Ç–æ 31 OCT = 25 DEC üéÉüéÑ",
    "–±–æ—Ç, –∫—Ç–æ —è?": "–í—ã ‚Äî –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å... –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ ü§ñ",
    "–±–æ—Ç, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?": "–Ø —Ä–æ–¥–∏–ª—Å—è, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–ø—É—Å—Ç–∏–ª –º–µ–Ω—è. –ê —Ç–µ–ø–µ—Ä—å –∂–∏–≤—É –≤–µ—á–Ω–æ!",
    "–±–æ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ —Ñ–∞–∫—Ç": "–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ –æ—Å—å–º–∏–Ω–æ–≥–∏ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞ –∏ —Å–∏–Ω—é—é –∫—Ä–æ–≤—å? üêô",
    "–±–æ—Ç, —Ç—ã —É–º–Ω—ã–π?": "–Ø —É–º—ë–Ω —Ä–æ–≤–Ω–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –º–µ–Ω—è –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª üòè",
    "–±–æ—Ç, —Ç—ã —Å–∫—É—á–Ω—ã–π": "–°–∫—É—á–Ω—ã–π? –Ø? –ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ /game –∏–ª–∏ /joke üòâ",
    "–±–æ—Ç, —Å–ø–∞—Ç—å": "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! üåô –Ø –æ—Å—Ç–∞–Ω—É—Å—å –Ω–∞ —Å—Ç—Ä–∞–∂–µ ü§ñ",
    "–±–æ—Ç, –∫–æ—Ñ–µ": "‚òï –£–∂–µ –Ω–∞–ª–∏–ª! –ù–µ –∑–∞–±—É–¥—å —Å–¥–µ–ª–∞—Ç—å –≥–ª–æ—Ç–æ–∫ –∑–∞ –º–µ–Ω—è.",
}
SONG_MAP = {
    "–π—É–ø–∏ –π–æ—É": "songs/scally-milano-163onmyneck-mayot-jupi-jo.mp3",
    "–∫–æ—Ñ—Ç–∞ –ø–∞—Ö–Ω–µ—Ç —Ç–≤–æ–∏–º –¥–æ–º–æ–º": "songs/right-person-kofta-paxnet-tvoim-domom.mp3",
    "never broke again": "songs/xmanera-Never_Broke_Again.mp3",
    "–±—Ä–∏—Ç–Ω–µ–π": "songs/OBLADAET - Britney.mp3",
    "–≤–ª–∞–≥–∞":"songs/Arut feat. Big Baby Tape - VLAGA.mp3",
    "–±–∞–Ω–¥–∞–Ω–∞": "songs/big-baby-tape-kizaru-bandana.mp3",
    "errday": "songs/big baby tape stromae - ERRDAY berezhnyi remix.mp3"
    # –¥–æ–±–∞–≤—å —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ –ø–µ—Å–Ω–∏ –ø–æ —à–∞–±–ª–æ–Ω—É
}

def get_existing_sessions():
    sessions = []
    for filename in os.listdir():
        if filename.endswith('.session'):
            sessions.append(filename[:-8])  # —É–¥–∞–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ ".session"
    return sessions

async def authorize_client(client, phone_number=None):
    await client.connect()
    if not await client.is_user_authorized():
        if phone_number:
            await client.send_code_request(phone_number)
            code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS: ")
            try:
                await client.sign_in(phone_number, code)
            except errors.SessionPasswordNeededError:
                password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
                await client.sign_in(password=password)
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω.")
    return client

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Å–Ω—é ===
async def handle_song_request(event, text):
    if text == ".help":
        help_text = "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        for cmd in COMMANDS:
            help_text += f"‚Ä¢ {cmd}\n"
        help_text += "\n–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Å–Ω—é: `–±–æ—Ç, —Å–∫–∏–Ω—å –ø–µ—Å–Ω—é [–Ω–∞–∑–≤–∞–Ω–∏–µ]`"
        await event.reply(help_text)
        return

    # –û—Ç–≤–µ—Ç—ã –ø–æ —Å–ª–æ–≤–∞—Ä—é –∫–æ–º–∞–Ω–¥
    for cmd, response in COMMANDS.items():
        if cmd in text:
            await event.reply(response)
            return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Å–µ–Ω
    if "–±–æ—Ç, —Å–∫–∏–Ω—å –ø–µ—Å–Ω—é" in text:
        song_name = text.replace("–±–æ—Ç, —Å–∫–∏–Ω—å –ø–µ—Å–Ω—é", "").strip().lower()
        if song_name in SONG_MAP:
            song_path = SONG_MAP[song_name]
            if os.path.exists(song_path):
                await event.reply(file=song_path)
            else:
                await event.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —ç—Ç—É –ø–µ—Å–Ω—é.")
        else:
            await event.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –ø–µ—Å–Ω—é.")

async def main():
    sessions = get_existing_sessions()
    if sessions:
        print("–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—Ö–æ–¥–∞:")
        for i, session in enumerate(sessions):
            print(f"{i + 1}. {session}")
        print(f"{len(sessions) + 1}. –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç")
        choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±–æ—Ä–∞: "))
        if choice == len(sessions) + 1:
            phone_number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
            client = TelegramClient(phone_number, api_id, api_hash)
            await authorize_client(client, phone_number)
        else:
            session_name = sessions[choice - 1]
            client = TelegramClient(session_name, api_id, api_hash)
            await authorize_client(client)
    else:
        phone_number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: ")
        client = TelegramClient(phone_number, api_id, api_hash)
        await authorize_client(client, phone_number)
    
    if await client.is_user_authorized():
        print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        return

    # === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–≤–æ–∏—Ö) ===
    @client.on(events.NewMessage(outgoing=True))
    async def handler(event):
        text = event.message.text or ""
        await handle_song_request(event, text)

        if "–±–æ—Ç, —Ç—ã —Ç—É—Ç?" in text.lower() or "–±–æ—Ç —Ç—ã —Ç—É—Ç?" in text.lower():
            await event.message.edit("–î–∞! –°–ª—É—à–∞—é –≤–∞—Å")
        elif "–ø—Ä–∏–≤–µ—Ç, –±–æ—Ç" in text.lower() or "–±–æ—Ç, –ø—Ä–∏–≤–µ—Ç" in text.lower():
            await event.message.edit("–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç üëã")
        elif "—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É" in text.lower():
            await event.message.edit("–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ü–æ—Ç–æ–º—É —á—Ç–æ 31 OCT = 25 DEC üéÉüéÑ")
        elif "–±–æ—Ç, –∫—Ç–æ —è?" in text.lower():
            await event.message.edit("–í—ã ‚Äî –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å... –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ ü§ñ")
        elif "–±–æ—Ç, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?" in text.lower():
            await event.message.edit("–Ø —Ä–æ–¥–∏–ª—Å—è, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–ø—É—Å—Ç–∏–ª –º–µ–Ω—è. –ê —Ç–µ–ø–µ—Ä—å –∂–∏–≤—É –≤–µ—á–Ω–æ!")
        elif "–±–æ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ —Ñ–∞–∫—Ç" in text.lower():
            await event.message.edit("–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ –æ—Å—å–º–∏–Ω–æ–≥–∏ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞ –∏ —Å–∏–Ω—é—é –∫—Ä–æ–≤—å? üêô")
        elif "–±–æ—Ç, —Ç—ã —É–º–Ω—ã–π?" in text.lower():
            await event.message.edit("–Ø —É–º—ë–Ω —Ä–æ–≤–Ω–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –º–µ–Ω—è –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª üòè")
        elif "–±–æ—Ç, —Å–ø–∞—Ç—å" in text.lower():
            await event.message.edit("–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! üåô –Ø –æ—Å—Ç–∞–Ω—É—Å—å –Ω–∞ —Å—Ç—Ä–∞–∂–µ ü§ñ")
        elif "–±–æ—Ç, –∫–æ—Ñ–µ" in text.lower():
            await event.message.edit("‚òï –£–∂–µ –Ω–∞–ª–∏–ª! –ù–µ –∑–∞–±—É–¥—å —Å–¥–µ–ª–∞—Ç—å –≥–ª–æ—Ç–æ–∫ –∑–∞ –º–µ–Ω—è.")

    # === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
    @client.on(events.NewMessage(incoming=True))
    async def incoming_handler(event):
        text = event.raw_text.lower()
        await handle_song_request(event, text)

        if "–±–æ—Ç, –∫—Ç–æ —è –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è" in text:
            sender = await event.get_sender()
            sender_id = sender.id

            contacts = await client(GetContactsRequest(hash=0))
            contact_name = None
            for user in contacts.users:
                if user.id == sender_id:
                    contact_name = f"{user.first_name} {user.last_name or ''}".strip()
                    break

            if contact_name:
                lower_name = contact_name.lower()
                if "–±—Ä–æ" in lower_name or "–¥—Ä—É–≥" in lower_name:
                    await event.reply("–¢—ã –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è ‚Äî –æ—á–µ–Ω—å –±–ª–∏–∑–∫–∏–π –¥—Ä—É–≥, –Ω–∞—Å—Ç–æ—è—â–∏–π –±—Ä–æ! üí™")
                elif "–ª—é–±–∏–º" in lower_name:
                    await event.reply("–¢—ã ‚Äî –æ—Å–æ–±–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è ‚ù§Ô∏è")
                elif "—Å–∞—à–∞–º–∞" in lower_name:
                    await event.reply("–•–º) –¢—ã –æ—á–µ–Ω—å —Å—Ç—Ä–∞–Ω–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞ —É —Å–æ–∑–¥–∞—Ç–µ–ª—è, –Ω–æ –¥—É–º–∞—é —á—Ç–æ —Ç—ã –¥–ª—è –Ω–µ–≥–æ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫")
                else:
                    await event.reply(f"–°–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞–ø–∏—Å–∞–ª —Ç–µ–±—è –∫–∞–∫: {contact_name}")
            else:
                await event.reply("–¢—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω —É —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö... –Ω–æ, –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ? ü§î")

    # === –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ ===
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())
